(()=>{"use strict";var __webpack_modules__={431:()=>{eval("\n;// CONCATENATED MODULE: ./src/javascript/functions.js\n/**\n * This file contains the helper functions of the application.\n * @author Alberto Iván Del Valle Ramos\n */\n \n/**\n * Creates a new animation\n * @param {HTMLElement} element \n * @param {Keyframe} keyframe\n * @param {KeyframeAnimationOptions} options\n */\nconst startAnimation = (element, keyframe, options) => {\n    return element.animate(keyframe, options)\n}\n\n/**\n * \n * @param {number} yPosition \n * @param {number} opacity \n * @returns an object with the specified values\n */\nconst textIntervals = (yPosition, opacity) => {\n    return Object.freeze({\n        transform: 'translateY(' + yPosition + 'px)',\n        opacity: opacity\n    })\n}\n\nconst toggleModal = (xPosition) => {\n\treturn Object.freeze({\n\t\ttransform: 'translateX('+ xPosition  +')'\n\t})\n}\n;// CONCATENATED MODULE: ./src/javascript/elements/btn-nav.js\n/*\n * @author Alberto Iván Del Valle ramos\n */\n\n\n\nconst $btnNav = document.getElementById('btn-nav')\nconst $navBar = document.getElementById('navigation')\n\nconst modalAnimatinOptions = {\n\tduration: 1000, \n\tfill: 'forwards',\n}\n\nconst openModal = [\n\ttoggleModal('-100%'),\n\ttoggleModal('100%'),\n]\n\nconst closeModal = [\n\ttoggleModal('100%'),\n\ttoggleModal('-100%'),\n]\n\nlet isClose = true\n\n$btnNav.addEventListener('click', () => {\n\tif(isClose) {\n\t\t$btnNav.setAttribute('disabled', true)\n\t\tstartAnimation(\n\t\t\t$navBar, \n\t\t\topenModal, \n\t\t\tmodalAnimatinOptions)\n\t\t.finished\n\t\t.then(()=> {\n\t\t\tisClose = false\n\t\t\t$btnNav.removeAttribute('disabled')\n\t\t})\n\t} else {\n\t\t$btnNav.setAttribute('disabled', true)\n\t\tstartAnimation(\n\t\t\t$navBar, \n\t\t\tcloseModal, \n\t\t\tmodalAnimatinOptions)\n\t\t.finished\n\t\t.then(()=> {\n\t\t\tisClose = true\n\t\t\t$btnNav.removeAttribute('disabled')\n\t\t})\n\t}\n})\n\n;// CONCATENATED MODULE: ./src/javascript/DOMhelpers.js\n/*\n * @author Alberto Iván Del Valle Ramos\n */\n\nconst getNodeFromTemplate = (templateId) => {\n\tconst $content = document.getElementById(templateId).content\n\tconst $element = $content.firstElementChild\n\tconst nodeEl = $element.cloneNode(true)\n\treturn nodeEl\n}\n\nconst createAlertMessage = (message, type) => {\n\tconst alertElement = getNodeFromTemplate('template-alert')\n\talertElement.querySelector('#alert-message').innerText = message\n\n\tif(type === 'danger') {\n\t\talertElement.style.backgroundColor = ' #ff7c60 '\n\t\talertElement.style.color = '#fff';\n\t}\n\n\tif(type === 'success') {\n\t\talertElement.style.backgroundColor = '#30b03a'\n\t\talertElement.style.color = '#fff';\n\t}\n\n\treturn alertElement\n}\n\n/*\n *\n *\n * @param {HTMLElement} element\n * @param {String} event\n * @param {Function} handlerFunction\n */\nconst listen = (element, event, handlerFunction) => {\n\telement.addEventListener(event, handlerFunction)\n}\n\n/*\n *\n * @param {{\n *  id: number,\n * \tname: string,\n * \timageURL: string,\n * \tinfo: string\n * }}\n */\nconst createInstructorNode = ({ id, name, imageURL, info}) => {\n\tconst instructorNode = getNodeFromTemplate('template-instructor')\n\n\t// Get instructor elements\n\tconst instructorImage = instructorNode.querySelector('.instructor__image--photo')\n\tconst instructorName = instructorNode.querySelector('.instructor__name')\n\tconst instructorInfo = instructorNode.querySelector('.instructor__bio')\n\n\tinstructorNode.id = `instructor-${id}`\n\n\t// IMAGE\n\tinstructorImage.setAttribute('src', imageURL)\n\tinstructorImage.setAttribute('alt', name)\n\tinstructorImage.setAttribute('id', `instructor-image-${id}`)\n\t//\tNAME\n\tinstructorName.innerText = name\n\n\treturn instructorNode\n}\n\nconst createInstructorInfoNode = (info) => {\n\tconst infoNode = getNodeFromTemplate('template-instructor-info')\n\tinfoNode.innerText = info\n\n\treturn infoNode\n}\n;// CONCATENATED MODULE: ./src/javascript/elements/contact-form.js\n/*\n *\n * @author Alberto Iván Del Valle Ramos\n */\n\n\nconst $form = document.getElementById('contact-form')\n\nconst formElementsValidation = {\n\tname: {\n\t\trequired: true,\n\t\tmaxLength: 50,\n\t},\n\tlastname: {\n\t\trequired: true,\n\t\tmaxLength: 50\n\t},\n\temail: {\n\t\trequired: true,\n\t\temail: true,\n\t},\n\tphone: {\n\t\tphone: true,\n\t}\n}\n\n$form.addEventListener('submit', event => {\n\tevent.preventDefault()\n\t//debugger\n\n\tconst errors = []\n\tconst emailRegEx = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n\tconst inputsList = event.target.querySelectorAll('input')\n\n\t// Check if values are correct\n\tinputsList.forEach((input, index) => {\n\t\tif (input.classList.contains('input-error')) {\n\t\t\tinput.classList.toggle('input-error')\n\t\t}\n\n\t\tconst fieldValue = input.value.trim().replace(/[.*+?^${}()|[\\]\\\\]/g, '') // SANITIZE\n\t\tconst fieldName = input.name\n\t\tconst uFieldName = `${fieldName.charAt(0).toUpperCase()}${fieldName.slice(1).toLowerCase()}`\n\t\tconst field = formElementsValidation[fieldName]\n\n\t\tif (field['required'] && fieldValue === \"\") {\n\t\t\terrors.push({\n\t\t\t\tfield: fieldName,\n\t\t\t\terrorMessage: `${uFieldName} is required`\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\tif (field['email'] && !fieldValue.match(emailRegEx)) {\n\t\t\terrors.push({\n\t\t\t\tfield: fieldName,\n\t\t\t\terrorMessage: 'Invalid email'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\tif ((field['phone'] && fieldValue.length > 0) && (fieldValue.length !== 10 || typeof(fieldValue) !== 'number')) {\n\t\t\terrors.push({\n\t\t\t\tfield: fieldName,\n\t\t\t\terrorMessage: 'Invalid phone'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t})\n\n\tif (errors.length > 0) {\n\t\terrors.forEach(error => {\n\t\t\tconst input = document.getElementById(error.field)\n\t\t\tif (!input.classList.contains('input-error')) {\n\t\t\t\tinput.classList.toggle('input-error')\n\t\t\t}\n\t\t})\n\t\treturn\n\t}\n\n\t//Clear form values\n\tconst $modal = getNodeFromTemplate('template-modal')\n\tconst name = document.getElementById('name').value\n\t$modal.querySelector('span').innerText = `Thanks ${name || ''}! We appreciate your preference. \\n As soon as possible we get in contact to you! \\nKeep yourself feet!`\n\n\tif (!document.getElementById('modal')) {\n\t\tdocument.querySelector('body').prepend($modal)\n\n\t\t$modal.querySelector('.modal-badge').animate([{\n\t\t\ttransform: 'translateY(-100%)'\n\t\t}, {\n\t\t\ttransform: 'translateY(0)'\n\t\t}], {\n\t\t\tduration: 1000,\n\t\t\tfill: 'forwards',\n\t\t\teasing: 'ease-in'\n\t\t})\n\t}\n\n\tconst $modalButton = document.getElementById('modal-button')\n\tconst handlerButton = event => {\n\t\tconst modal = document.getElementById('modal')\n\t\t$modal.querySelector('.modal-badge').animate([{\n\t\t\ttransform: 'translateY(0)'\n\t\t}, {\n\t\t\ttransform: 'translateY(-100%)'\n\t\t}], {\n\t\t\tduration: 1000,\n\t\t\tfill: 'forwards',\n\t\t\teasing: 'ease-out'\n\t\t}).finished.then(() => {\n\t\t\tif (modal) modal.remove()\n\t\t\t$modalButton.removeEventListener('click', handlerButton)\n\t\t})\n\t}\n\t$modalButton.addEventListener('click', handlerButton)\n\n\tinputsList.forEach(input => {\n\t\tinput.value = ''\n\t})\n})\n;// CONCATENATED MODULE: ./src/javascript/elements/instructor.js\n/*\n * This module is for creating new instructor and add them\n * to instructors container in HTML file.\n * Just add a new instructor in the arrar \"instructors\" for adding\n * new ones.\n * @author Alberto Iván Del Valle Ramos\n */\n\n\nconst $container = document.getElementById('instructor-container')\nlet instructors = {}\nlet onEvent = false\n\nconst data = localStorage.getItem('instructors_gym')\nif (data && data.length !== 0) {\n\tinstructors = JSON.parse(data)\n} else {\n\tinstructors = [{\n\t\tid: 0,\n\t\tname: 'Lorena Del Valle',\n\t\tinfo: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec posuere diam vel augue cursus dapibus. Curabitur non est nibh. Donec euismod justo id velit ornare fermentum. Vivamus in dolor lorem. ',\n\t\timageURL: 'https://i.pinimg.com/originals/a6/58/32/a65832155622ac173337874f02b218fb.png'\n\t}, {\n\t\tid: 1,\n\t\tname: 'Lorena Olivares',\n\t\tinfo: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec posuere diam vel augue cursus dapibus. Curabitur non est nibh. Donec euismod justo id velit ornare fermentum. Vivamus in dolor lorem. ',\n\t\timageURL: 'https://i.pinimg.com/originals/a6/58/32/a65832155622ac173337874f02b218fb.png'\n\t}]\n\n\tlocalStorage.setItem('instructors_gym', JSON.stringify(instructors))\n}\n\ninstructors.forEach(instructor => {\n\tconst instructorNode = createInstructorNode(instructor)\n\n\t// EVENT LISTENERS\n\t// SHOW INFO EVENT\n\tinstructorNode\n\t\t.querySelector(`#instructor-image-${instructor.id}`)\n\t\t.addEventListener('click', event => {\n\t\t\tconst instructorNodeFather = event.target.parentNode.parentNode\n\t\t\tconst selectedInstructorId = event.target.id.split('-')[2]\n\t\t\tconst btnClose = instructorNodeFather.querySelector('.closeInfo')\n\n\t\t\t// GET SELECTED INSTRUCTOR\n\t\t\tconst instructorsArray = JSON.parse(localStorage.getItem('instructors_gym'))\n\t\t\tconst selectedInstructor = instructorsArray[+selectedInstructorId]\n\t\t\t// SELECTED INSTRUCTOR INFO\n\t\t\tconst instructorInfo = selectedInstructor.info\n\n\t\t\tconst infoNode = createInstructorInfoNode(instructorInfo)\n\n\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\tinstructorNodeFather\n\t\t\t\t\t\t.querySelector('.instructor__bio')\n\t\t\t\t\t\t.append(infoNode)\n\t\t\t\t\tresolve(infoNode)\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn instructorNodeFather\n\t\t\t\t\t\t.querySelector(`#instructor-image-${instructor.id}`)\n\t\t\t\t\t\t.animate([{\n\t\t\t\t\t\t\topacity: 1\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\topacity: 0.1\n\t\t\t\t\t\t}], {\n\t\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t\t\tfill: 'forwards',\n\t\t\t\t\t\t\teasing: 'ease-out'\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn infoNode\n\t\t\t\t\t\t.animate([{\n\t\t\t\t\t\t\ttransform: 'translateY(-100%)'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\ttransform: 'translateY(0)'\n\t\t\t\t\t\t}, ], {\n\t\t\t\t\t\t\tduration: 1000,\n\t\t\t\t\t\t\teasing: 'ease-out'\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tbtnClose\n\t\t\t\t\t\t.removeAttribute('hidden')\n\t\t\t\t})\n\t\t})\n\n\t// CLOSE INFO EVENT\n\tinstructorNode\n\t\t.querySelector('.closeInfo')\n\t\t.addEventListener('click', event => {\n\t\t\tconst btnClose = event.target.parentNode\n\t\t\tconst instructorNodeFather = event.target.parentNode.parentNode\n\n\t\t\tinstructorNodeFather\n\t\t\t\t.querySelector('.instructor__bio--info')\n\t\t\t\t.animate([{\n\t\t\t\t\ttransform: 'translateY(0)',\n\t\t\t\t\topacity: 0.9\n\t\t\t\t}, {\n\t\t\t\t\ttransform: 'translateY(-100%)',\n\t\t\t\t\topacity: 0\n\t\t\t\t}], {\n\t\t\t\t\tduration: 1000\n\t\t\t\t})\n\t\t\t\t.finished\n\t\t\t\t.then(() => {\n\t\t\t\t\tinstructorNodeFather\n\t\t\t\t\t\t.querySelector('.instructor__bio--info')\n\t\t\t\t\t\t.remove()\n\t\t\t\t\treturn true\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn instructorNodeFather\n\t\t\t\t\t\t.querySelector(`#instructor-image-${instructor.id}`)\n\t\t\t\t\t\t.animate([{\n\t\t\t\t\t\t\topacity: 0.1\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\topacity: 1\n\t\t\t\t\t\t}], {\n\t\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t\t\tfill: 'forwards'\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tbtnClose\n\t\t\t\t\t\t.setAttribute('hidden', true)\n\t\t\t\t})\n\t\t})\n\n\t$container.append(instructorNode)\n})\n;// CONCATENATED MODULE: ./src/javascript/elements/btn-links.js\n/**\n *\n * @author Alberto Iván Del Valle Ramos\n */\n\n\nconst $links = document.getElementById('link-list')\nconst $link = $links.querySelectorAll('.link')\n\n$links.addEventListener('click', event => {\n\tconst target = event.originalTarget\n\n\tif (target.classList.contains('link')) {\n\t\tconst name = target.innerText.toLowerCase().replace(' ', '-')\n\t\twindow.location.hash = name\n\n\t\t$btnNav.click()\n\t}\n})\n;// CONCATENATED MODULE: ./src/javascript/sections/header.js\n/**\n * \n * @author Alberto Iván Del Valle Ramo\n */\n\n\n// ELEMENTS\nconst $displaySection = document.getElementById('display-information')\n\n// DECLARATIONS AND INIZIALITZATIONS\nlet counter = 0\nconst information = [\n\t'DON\\'T BE STRESSED',\n\t'DON\\'T BE SCARED',\n\t'DO YOU HAVE A GOAL?',\n\t'LET\\'S DO IT TOGETHER!'\n]\n\nconst showTextKeyframe = [\n\ttextIntervals(-50, 0),\n\ttextIntervals(-25, 0.5),\n\ttextIntervals(0, 1),\n\ttextIntervals(0, 1)\n]\n\nconst hideTextKeyframe = [\n\ttextIntervals(0, 1),\n\ttextIntervals(-25, 0.5),\n\ttextIntervals(-50, 0)\n]\n\nsetInterval(() => {\n\t$displaySection.innerText = information[counter]\n\n\tstartAnimation(\n\t\t$displaySection,\n\t\tshowTextKeyframe, {\n\t\t\tduration: 3000,\n\t\t\tdelay: 0\n\t\t}\n\t).finished.then(() =>\n\t\tstartAnimation(\n\t\t\t$displaySection,\n\t\t\thideTextKeyframe, {\n\t\t\t\tduration: 2500,\n\t\t\t\tdelay: 1000\n\t\t\t})\n\t)\n\n\tif (counter === information.length - 1)\n\t\tcounter = 0\n\telse\n\t\tcounter++\n}, 6500)\n;// CONCATENATED MODULE: ./src/javascript/index.js\n/**\n * \n * @author Alberto Iván Del Valle Ramos\n */\n// IMPORTING ELEMENTS\n\n\n\n\n\n\n// IMPORTING SECTIONS\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///431\n")}},__webpack_exports__={};__webpack_modules__[431]()})();